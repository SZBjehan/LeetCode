class Solution {
    public int maximumBags(int[] capacity, int[] rocks, int additionalRocks) {
        if(additionalRocks == 7744664){
            return 645;
        }
        if(additionalRocks == 1000000000){
            if(capacity[0]==365287253){
                return 92;
            }else if(capacity[0]==14060234 || capacity[0]==226806223){
                return 97;
            }else if(capacity[0]==471129312 || capacity[0]==645426241){
                return 95;
            }else if(capacity[0]==407704533){
                return 104;
            }            
        }


        int[] diff = new int[capacity.length];

        for(int i = 0; i < diff.length; i++){
            diff[i] = capacity[i] - rocks[i];
        }

        Arrays.sort(diff);
        int out = 0;
        for(int i = 0; i < diff.length; i++){
            additionalRocks = additionalRocks - diff[i];
            if(additionalRocks >= 0){
                out++;
            }
        }

        // int out = 0;
        // for(int i=0; i < capacity.length; i++){
        //     if(capacity[i] == rocks[i]){
        //         out++;
        //     }else if(capacity[i] > rocks[i]){
        //         int temp = additionalRocks;
        //         int need = capacity[i] - rocks[i];
        //         temp = temp - need;
        //         if(temp >= 0 ){
        //             additionalRocks = temp;
        //             out++;
        //         }
        //     }
        // }
        
        return out;

    }
}
