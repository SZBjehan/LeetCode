class Solution {
    public int[] decrypt(int[] code, int k) {
        
        int[] output = new int[code.length];
        if(k==0){
            for(int i=0; i<code.length; i++){
                output[i] = 0;
            }
        }
        else if(k>0){
            for(int i=0; i<code.length; i++){        
                int sum = 0;
                for(int j=1; j<=k; j++){
                    int temp = (i + j) % code.length;
                    sum = sum + code[temp];
                }
                output[i] = sum;
            }
        }
        else if(k<0){
            for (int i = 0; i < code.length; i++) {
                int sum = 0;
                for (int j = 1; j <= Math.abs(k); j++) {
                    int temp = (i - j + code.length) % code.length; 
                    sum += code[temp];
                }
                output[i] = sum;
            }
        }
    return output;
    }
}




#### Python
class Solution(object):
    def decrypt(self, code, k):
        """
        :type code: List[int]
        :type k: int
        :rtype: List[int]
        """
        n = len(code)
        output = [0] * n  
        
        if k == 0:
            return output
        
        elif k > 0:
            for i in range(n):
                sum_val = 0
                for j in range(1, k + 1):
                    temp = (i + j) % n 
                    sum_val += code[temp]
                output[i] = sum_val
        
        elif k < 0:
            for i in range(n):
                sum_val = 0
                for j in range(1, abs(k) + 1):
                    temp = (i - j + n) % n 
                    sum_val += code[temp]
                output[i] = sum_val        
        
        return output
        
